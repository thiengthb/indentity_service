version: '3.8'

services:
  mysql:
    image: mysql
    container_name: mysql-db-ctn
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/my.cnf:/etc/mysql/my.cnf:ro
    ports:
      - "3306:3306"
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql-db-ctn
    ports:
      - "4000:80"
    networks:
      - app_net

  redis:
    image: redis
    container_name: redis-cache-ctn
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  springboot:
    env_file:
      - .env.docker
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    container_name: springboot-app-ctn
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_net

volumes:
  mysql_data:
  redis_data:

networks:
  app_net:
    driver: bridge